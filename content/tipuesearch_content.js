var tipuesearch = {"pages": [{'title': 'About', 'text': '班級:四技設計二甲 \n 學號:40823149 \n 姓名:趙偉辰... \n 倉儲: https://github.com/40823149/cad2020 \n 網站: https://40823149.github.io/cad2020/content/index.html \n \n', 'tags': '', 'url': 'About.html'}, {'title': '課程內容', 'text': '', 'tags': '', 'url': '課程內容.html'}, {'title': 'week1', 'text': '', 'tags': '', 'url': 'week1.html'}, {'title': '指令', 'text': 'git config --global http.proxy\xa0 http:// {2001:288:6004:17::69}:3128 \n git config --global user.email "使用者的email" \n git config --global user.name "40823149(使用者名稱)" \n git clone\xa0 https://git hub.com/40823149/cad2020.git (把github上的資料複製到cad2020\xa0 的資料夾) \n git submodule add\xa0\xa0 https://git hub.com/mdecourse/cmsimde.git cmsimde \n git clone --recurse submodules\xa0 https://git hub.com/40823111/cad2020.git \n pip install\xa0 flask flask_cors lxml bs4 markdown pelican leo (安裝軟件) \n tracert\xa0 \xa0 是一種電腦網路工具。它可顯示封包在IP網路經過的路由器的IP位址 \n trace route\xa0 \xa0執行路由追蹤可以協助您確認網路連線問題的地方\xa0 \n nslookup( name server lookup )\xa0 查詢域名對應的IP位址 \n ipconfig /all\xa0 \xa0\xa0 控制網路連線的一個命令列工具 \n <font size="5">指定字體大小為5</font>\xa0 放大字體 \n pip install flask flask_cors lxml bs4 markdown pelican leo\xa0 \n <pre class="brush:js;auto-links:false;toolbar:false" contenteditable="false"></pre>c \n (上傳) \n 到你的cad2020 \n git add . \n git commit -m "你上 傳的檔案名稱" \n git push \n (有時候無法上傳可以改成) \n git add . \n git commit -m "你上傳的檔案名稱" \n git push -f \n', 'tags': '', 'url': '指令.html'}, {'title': '架設網站', 'text': '\xa01. 下載 fall2020_cp.7z 當隨身系統，\xa0 64 位元 Windows 10 啟動 start.bat \n \xa02. 下載 \xa0 Portable GIT. \xa0放入data portablegit \n \xa0 \n \xa03. 修改Start的路進 \n \n 4. 到github 新建一個repository(資料庫)\xa0 名子為cad2020 \n \n 5. 到github網站git clone自己倉儲的網址clone完後git submodule add \n 6. 進入cmsimde\xa0 把up_dir裡的東西全部複製 \n \n 7. 將資料放到cmsimde外面\xa0 cad2020的目錄下 \n \n 8. 進入cmsimde目錄下，將wsgi.py拖入SciTE，tools-->go \n \n 9.要打 git add .\xa0 \xa0 \n \xa0 \xa0 \xa0 \xa0 git commit -m "你上 傳的檔案名稱"\xa0 \xa0  \n \xa0 \xa0 \xa0 \xa0 git push \n', 'tags': '', 'url': '架設網站.html'}, {'title': '團體體積', 'text': '  \n', 'tags': '', 'url': '團體體積.html'}, {'title': '個人畫圖', 'text': '\n \n \n \n \n', 'tags': '', 'url': '個人畫圖.html'}, {'title': 'week2', 'text': '', 'tags': '', 'url': 'week2.html'}, {'title': '團體', 'text': '\n', 'tags': '', 'url': '團體.html'}, {'title': '個人', 'text': '\n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n', 'tags': '', 'url': '個人.html'}, {'title': 'week3', 'text': '中秋節放假 \n', 'tags': '', 'url': 'week3.html'}, {'title': 'week4', 'text': '', 'tags': '', 'url': 'week4.html'}, {'title': '建立ssh', 'text': '1.利用編輯器進入shell的命令環境 \n \n (2)輸入指令 \n \xa0ssh-keygen -t rsa -b 4096 -C  "使用者學號" \n \n \n \n \xa0 在 /y/tmp/key/id_rsa (自己設要放在哪裡)目錄下建立 id_rsa 與 id_rsa.pub 等 private key 與 public key \n \n (3)下載 Putty 工具組 \n \xa0 接下來要利用 puttygen.exe \n \xa0 load(載入)\xa0\xa0 將 id_rsa 轉為 Putty 可以解讀的 .ppk 格式 並且 Save private key \n \n (4)開啟 github settings 中的 SSH and GPD keys \n \n \xa0 \xa0選擇 New SSH key \n \n 將其複製內容放入key的空格 \n \n 6. 修改啟動的 start.bat 加入下列設定: \n \xa0 1.\xa0 set GIT_HOME=%Disk%:\\portablegit\\bin\\ \n \xa0 2.\xa0 set GIT_SSH=%Disk%:\\putty\\plink.exe \n 設定Putty: \n 1.將home 下的 .ssh 目錄中的 config 設定檔案為: \n \n \n \n 7.將倉儲中 .git 目錄下的 config 檔案中的連線協定, 由 https 改為採 ssh 連線:\xa0 \n \n \n \n \n \n \n 1 \n 2 \n 3 \n 4 \n 5 \n 6 \n 7 \n 8 \n 9 \n 10 \n 11 \n 12 \n 13 \n 14 \n 15 \n 16 \n 17 \n 18 \n \n \n \n [core] \n \xa0\xa0\xa0\xa0 repositoryformatversion = 0 \n \xa0\xa0\xa0\xa0 filemode = false \n \xa0\xa0\xa0\xa0 bare = false \n \xa0\xa0\xa0\xa0 logallrefupdates = true \n \xa0\xa0\xa0\xa0 symlinks = false \n \xa0\xa0\xa0\xa0 ignorecase = true \n [submodule] \n \xa0\xa0\xa0\xa0 active = . \n [remote "origin"] \n \xa0\xa0\xa0\xa0 #url = https://github.com/mdecourse/wcmj2020.git \n \xa0\xa0\xa0\xa0 url = git@github.com:mdecourse/wcmj2020.git \n \xa0\xa0\xa0\xa0 fetch = +refs/heads/*:refs/remotes/origin/* \n [branch "master"] \n \xa0\xa0\xa0\xa0 remote = origin \n \xa0\xa0\xa0\xa0 merge = refs/heads/master \n [submodule "cmsimde"] \n \xa0\xa0\xa0\xa0 url = https://github.com/mdecourse/cmsimde.git \n \n \n \n \n \n8.開啟 Putty.exe \n \n \n \n 9.Load github.com \n \n \n 10.進入 Connection-SSH-Auth 選擇之前所創好的Key \n \n 11.回到 Session 按save \n 12.按下open就可 無需輸入帳號密碼進行 git push \n', 'tags': '', 'url': '建立ssh.html'}, {'title': 'wink 3介紹', 'text': '使用wink 3從此開啟 \n \n 新增專案 \n \n wink 3 的快捷鍵 \n 截圖\xa0 Pause\xa0 \xa0開始/結束 Shift+ Pause \n', 'tags': '', 'url': 'wink 3介紹.html'}, {'title': 'week5', 'text': '', 'tags': '', 'url': 'week5.html'}, {'title': 'API', 'text': '應用程式介面 ( A pplication \xa0 P rogramming \xa0 I nterface): \n \xa0SOLIDWORKS應用程序編程接口（API）是SOLIDWORKS軟件的COM編程接口， \n 和操作使用軟件本身的功能一樣，屬於應用手法的一種。一般的操作是：通過鼠標點擊，鍵盤鍵入數字操作它現有的按鈕，命令；而API 則是通過編程語言代碼，對現有的功能進行一定的控制，形成新的命令或功能，即利用編程代碼來操控軟件的現有功能 \n 該API包含數百種函數，您可以從Visual Basic（VB），Visual Basic for Applications（VBA），VB.NET，C ++，C＃或SOLIDWORKS宏文件中調用。 \n', 'tags': '', 'url': 'API.html'}]};