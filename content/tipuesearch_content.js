var tipuesearch = {"pages": [{'title': 'About', 'text': '班級:四技設計二甲 \n 學號:40823149 \n 姓名:趙偉辰 \n 倉儲: https://github.com/40823149/cad2020 \n 網站: https://40823149.github.io/cad2020/content/index.html \n \n', 'tags': '', 'url': 'About.html'}, {'title': '課程內容', 'text': '', 'tags': '', 'url': '課程內容.html'}, {'title': 'week1', 'text': '', 'tags': '', 'url': 'week1.html'}, {'title': '指令', 'text': 'git config --global http.proxy\xa0 http:// {2001:288:6004:17::69}:3128 \n git config --global user.email "使用者的email" \n git config --global user.name "40823149(使用者名稱)" \n git clone\xa0 https://git hub.com/40823149/cad2020.git (把github上的資料複製到cad2020\xa0 的資料夾) \n git submodule add\xa0\xa0 https://git hub.com/mdecourse/cmsimde.git cmsimde \n git clone --recurse submodules\xa0 https://git hub.com/40823111/cad2020.git \n pip install\xa0 flask flask_cors lxml bs4 markdown pelican leo (安裝軟件) \n tracert\xa0 \xa0 是一種電腦網路工具。它可顯示封包在IP網路經過的路由器的IP位址 \n trace route\xa0 \xa0執行路由追蹤可以協助您確認網路連線問題的地方\xa0 \n nslookup( name server lookup )\xa0 查詢域名對應的IP位址 \n ipconfig /all\xa0 \xa0\xa0 控制網路連線的一個命令列工具 \n <font size="5">指定字體大小為5</font>\xa0 放大字體 \n pip install flask flask_cors lxml bs4 markdown pelican leo\xa0 \n <pre class="brush:js;auto-links:false;toolbar:false" contenteditable="false"></pre>c \n (上傳) \n 到你的cad2020 \n git add . \n git commit -m "你上 傳的檔案名稱" \n git push \n (有時候無法上傳可以改成) \n git add . \n git commit -m "你上傳的檔案名稱" \n git push -f \n', 'tags': '', 'url': '指令.html'}, {'title': '架設網站', 'text': '\xa01. 下載 fall2020_cp.7z 當隨身系統，\xa0 64 位元 Windows 10 啟動 start.bat \n \xa02. 下載 \xa0 Portable GIT. \xa0放入data portablegit \n \xa0 \n \xa03. 修改Start的路進 \n \n 4. 到github 新建一個repository(資料庫)\xa0 名子為cad2020 \n \n 5. 到github網站git clone自己倉儲的網址clone完後git submodule add \n 6. 進入cmsimde\xa0 把up_dir裡的東西全部複製 \n \n 7. 將資料放到cmsimde外面\xa0 cad2020的目錄下 \n \n 8. 進入cmsimde目錄下，將wsgi.py拖入SciTE，tools-->go \n \n 9.要打 git add .\xa0 \xa0 \n \xa0 \xa0 \xa0 \xa0 git commit -m "你上 傳的檔案名稱"\xa0 \xa0  \n \xa0 \xa0 \xa0 \xa0 git push \n', 'tags': '', 'url': '架設網站.html'}, {'title': '團體體積', 'text': '  \n', 'tags': '', 'url': '團體體積.html'}, {'title': '個人畫圖', 'text': '\n \n \n \n \n', 'tags': '', 'url': '個人畫圖.html'}, {'title': 'week2', 'text': '', 'tags': '', 'url': 'week2.html'}, {'title': '團體', 'text': '\n', 'tags': '', 'url': '團體.html'}, {'title': '個人', 'text': '\n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n', 'tags': '', 'url': '個人.html'}, {'title': 'week3', 'text': '中秋節放假 \n', 'tags': '', 'url': 'week3.html'}, {'title': 'week4', 'text': '', 'tags': '', 'url': 'week4.html'}, {'title': '建立ssh', 'text': '1.利用編輯器進入shell的命令環境 \n \n (2)輸入指令 \n \xa0ssh-keygen -t rsa -b 4096 -C  "使用者學號" \n \n \n \n \xa0 在 /y/tmp/key/id_rsa (自己設要放在哪裡)目錄下建立 id_rsa 與 id_rsa.pub 等 private key 與 public key \n \n (3)下載 Putty 工具組 \n \xa0 接下來要利用 puttygen.exe \n \xa0 load(載入)\xa0\xa0 將 id_rsa 轉為 Putty 可以解讀的 .ppk 格式 並且 Save private key \n \n (4)開啟 github settings 中的 SSH and GPD keys \n \n \xa0 \xa0選擇 New SSH key \n \n 將其複製內容放入key的空格 \n \n 6. 修改啟動的 start.bat 加入下列設定: \n \xa0 1.\xa0 set GIT_HOME=%Disk%:\\portablegit\\bin\\ \n \xa0 2.\xa0 set GIT_SSH=%Disk%:\\putty\\plink.exe \n 設定Putty: \n 1.將home 下的 .ssh 目錄中的 config 設定檔案為: \n \n \n \n 7.將倉儲中 .git 目錄下的 config 檔案中的連線協定, 由 https 改為採 ssh 連線:\xa0 \n \n \n \n \n \n \n 1 \n 2 \n 3 \n 4 \n 5 \n 6 \n 7 \n 8 \n 9 \n 10 \n 11 \n 12 \n 13 \n 14 \n 15 \n 16 \n 17 \n 18 \n \n \n \n [core] \n \xa0\xa0\xa0\xa0 repositoryformatversion = 0 \n \xa0\xa0\xa0\xa0 filemode = false \n \xa0\xa0\xa0\xa0 bare = false \n \xa0\xa0\xa0\xa0 logallrefupdates = true \n \xa0\xa0\xa0\xa0 symlinks = false \n \xa0\xa0\xa0\xa0 ignorecase = true \n [submodule] \n \xa0\xa0\xa0\xa0 active = . \n [remote "origin"] \n \xa0\xa0\xa0\xa0 #url = https://github.com/mdecourse/wcmj2020.git \n \xa0\xa0\xa0\xa0 url = git@github.com:mdecourse/wcmj2020.git \n \xa0\xa0\xa0\xa0 fetch = +refs/heads/*:refs/remotes/origin/* \n [branch "master"] \n \xa0\xa0\xa0\xa0 remote = origin \n \xa0\xa0\xa0\xa0 merge = refs/heads/master \n [submodule "cmsimde"] \n \xa0\xa0\xa0\xa0 url = https://github.com/mdecourse/cmsimde.git \n \n \n \n \n \n8.開啟 Putty.exe \n \n \n \n 9.Load github.com \n \n \n 10.進入 Connection-SSH-Auth 選擇之前所創好的Key \n \n 11.回到 Session 按save \n 12.按下open就可 無需輸入帳號密碼進行 git push \n', 'tags': '', 'url': '建立ssh.html'}, {'title': 'wink 3介紹', 'text': '使用wink 3從此開啟 \n \n 新增專案 \n \n wink 3 的快捷鍵 \n 截圖\xa0 Pause\xa0 \xa0開始/結束 Shift+ Pause \n', 'tags': '', 'url': 'wink 3介紹.html'}, {'title': 'week5', 'text': '', 'tags': '', 'url': 'week5.html'}, {'title': 'API', 'text': '應用程式介面 ( A pplication \xa0 P rogramming \xa0 I nterface): \n \xa0SOLIDWORKS應用程序編程接口（API）是SOLIDWORKS軟件的COM編程接口， \n 和操作使用軟件本身的功能一樣，屬於應用手法的一種。一般的操作是：通過鼠標點擊，鍵盤鍵入數字操作它現有的按鈕，命令；而API 則是通過編程語言代碼，對現有的功能進行一定的控制，形成新的命令或功能，即利用編程代碼來操控軟件的現有功能 \n 該API包含數百種函數，您可以從Visual Basic（VB），Visual Basic for Applications（VBA），VB.NET，C ++，C＃或SOLIDWORKS宏文件中調用。 \n \n', 'tags': '', 'url': 'API.html'}, {'title': 'week6', 'text': '', 'tags': '', 'url': 'week6.html'}, {'title': 'week7', 'text': '', 'tags': '', 'url': 'week7.html'}, {'title': 'Engineering (工程師)', 'text': 'Engineers, as practitioners of engineering, are professionals who invent, design, analyze, build and test machines, complex systems, structures, gadgets and materials to fulfill functional objectives and requirements while considering the limitations imposed by practicality, regulation, safety and cost. \n 工程師，作為工程從業者，是專業人員，他們在研究實用性，法規，安全性和成本的限制的同時，發明，設計，分析，建造和測試機器，複雜的系統，結構，小工具和材料，以實現功能目標和要求。 \n The word engineer (Latin ingeniator) is derived from the Latin words ingeniare ("to create, generate, contrive, devise") and ingenium ("cleverness"). The foundational qualifications of an engineer typically include a four-year bachelor\'s degree in an engineering discipline, or in some jurisdictions, a master\'s degree in an engineering discipline plus four to six years of peer-reviewed professional practice (culminating in a project report or thesis) and passage of engineering board examinations. \n 工程師（Latin engeniator）一詞源自拉丁語ingeniare（“創造，生成，嘗試，設計”）和ingenium（“聰明”）。工程師的基本資格通常包括工程學科的四年制學士學位，或在某些轄區，工程學科的碩士學位以及四到六年的同行評審專業實踐（最終形成項目報告或論文） ）並通過工程委員會考試。 The work of engineers forms the link between scientific discoveries and their subsequent applications to human and business needs and quality of life. \n 工程師的工作構成了科學發現及其對人類和企業需求以及生活質量的後續應用之間的聯繫。 \n The work of engineers forms the link between scientific discoveries and their subsequent applications to human and business needs and quality of life. The following paragraph cited from "An Introduction to Mechanical Engineering, Third Edition Jonathan Wickert and Kemper E. Lewis", pp. 4-5, 2013 The word "engineering" derives from the Latin root ingeniere, meaning to design or to devise, which also forms the basis of the word "ingenious." Those meanings are quite appropriate summaries of the traits of a good engineer. At the most fundamental level, engineers apply their knowledge of mathematics, science, and materials—as well as their skills in communications and business—to develop new and better technologies. \n 工程師的工作構成了科學發現及其對人類和企業需求以及生活質量的後續應用之間的聯繫。\n以下段落引自“機械工程概論，第三版Jonathan Wickert和Kemper E. Lewis”，第4-5頁，2013年\n“工程”一詞源自拉丁語詞根創新，意為設計或設計，這也構成了“精髓”一詞的基礎。\n這些含義是對優秀工程師特質的恰當概括。\n在最基本的層面上，工程師運用其在數學，科學和材料方面的知識以及他們在通信和商務方面的技能，來開發新的更好的技術。 Rather than experiment solely through trial and error, engineers are educated to use mathematics, scientific principles, and computer simulations as tools to create faster, more accurate, and more economical designs. In that sense, the work of an engineer differs from that of a scientist, who would normally emphasize the discovery of physical laws rather than apply those phenomena to develop new products. Engineering does not exist for the sake of furthering or applying mathematics, science, and computation by themselves. Rather, engineering is a driver of social and economic growth and an integral part of the business cycle. With that perspective, the U.S. Department of Labor summarizes the engineering profession as follows: Engineers apply the theories and principles of science and mathematics to research and develop economical solutions to technical problems. Their work is the link between perceived social needs and commercial applications. Engineers design products, machinery to build those products, plants in which those products are made, and the systems that ensure the quality of the products and the efficiency of the workforce and manufacturing process. Engineers design, plan, and supervise the construction of buildings, highways, and transit systems. They develop and implement improved ways to extract, process, and use raw materials, such as petroleum and natural gas. They develop new materials that both improve the performance of products and take advantage of advances in technology. \n 不僅要通過反複試驗來進行實驗，還應教育工程師使用數學，科學原理和計算機模擬作為工具來創建更快，更準確和更經濟的設計。\n從這個意義上講，工程師的工作不同於科學家的工作，科學家通常會強調發現物理定律，而不是將這些現象應用於開發新產品。\n工程本身並不是為了進一步發展或應用數學，科學和計算而設計的。而是，工程技術是社會和經濟增長的驅動力，也是商業周期的組成部分。從這一角度出發，美國勞工部將工程專業總結如下：\n工程師運用科學和數學的理論和原理來研究和開發技術問題的經濟解決方案。他們的工作是感知的社會需求與商業應用之間的聯繫。\n工程師設計產品，製造這些產品的機械，製造這些產品的工廠以及確保產品質量以及勞動力和製造過程效率的系統。\n工程師設計，規劃和監督建築物，公路和運輸系統的建設。他們開發並實施了改進的方法來提取，加工和使用石油和天然氣等原材料。他們開發新材料，既可以提高產品性能，又可以利用技術進步。 \n They harness the power of the sun, the Earth, atoms, and electricity for use in supplying the Nation’s power needs, and create millions of products using power. They analyze the impact of the products they develop or the systems they design on the environment and on people using them. Engineering knowledge is applied to improving many things, including the quality of healthcare, the safety of food products, and the operation of financial systems. 他們利用太陽，地球，原子和電力的力量來滿足國家的電力需求，並利用電力創造數百萬種產品。 他們分析開發的產品或設計的系統對環境和使用它們的人的影響。 工程知識可用於改善許多方面，包括醫療保健質量，食品安全性和金融系統的運作。 \n', 'tags': '', 'url': 'Engineering (工程師).html'}, {'title': '利用 SciTE 編輯器類解譯 ANSI C 程式', 'text': '下載\xa0 tcc-0.9.27-win64-bin.zip \n 解壓縮放入 y:\\ 根目錄中 \n 2. 接著將 y:\\tcc\\ 放入隨身系統中的 path 命令搜尋路徑中, 一旦啟動後就可以直接執行 tcc.exe, 也就是 start.bat 修改的地方 \n \n \n \n \n \n \n 1 \n 2 \n 3 \n 4 \n 5 \n \n \n \n set path_portablegit=%Disk%:\\Portablegit\\bin; \n set path_julia=%Disk%:\\julia-1.5.2\\bin; \n set path_tcc=%Disk%:\\tcc\\; \n \xa0 \n path=%Disk%:;%path_python%;%path_portablegit%;%path_julia%;%path_tcc%;%path%; \n \n \n \n \n \n \n \n \n \n \n \n \n 3. 修改完記得關掉重開 start.bat \n \n \n \n \n \n \n \n \n \n \n 1 \n 2 \n 3 \n 4 \n 5 \n 6 \n 7 \n 8 \n 9 \n 10 \n 11 \n 12 \n 13 \n 14 \n 15 \n 16 \n 17 \n 18 \n 19 \n 20 \n 21 \n 22 \n 23 \n 24 \n 25 \n 26 \n 27 \n 28 \n 29 \n 30 \n 31 \n 32 \n 33 \n 34 \n 35 \n 36 \n 37 \n 38 \n 39 \n 40 \n 41 \n 42 \n 43 \n \n \n \n Tiny C Compiler 0.9.27 - Copyright (C) 2001-2006 Fabrice Bellard \n Usage: tcc [options...] [-o outfile] [-c] infile(s)... \n \xa0\xa0\xa0\xa0\xa0\xa0\xa0 tcc [options...] -run infile [arguments...] \n General options: \n \xa0\xa0 -c\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0 compile only - generate an object file \n \xa0\xa0 -o outfile\xa0 set output filename \n \xa0\xa0 -run\xa0\xa0\xa0\xa0\xa0\xa0\xa0 run compiled source \n \xa0\xa0 -fflag\xa0\xa0\xa0\xa0\xa0 set or reset ( with   \'no-\'   prefix)  \'flag\'   (see tcc -hh) \n \xa0\xa0 -Wwarning\xa0\xa0 set or reset ( with   \'no-\'   prefix)  \'warning\'   (see tcc -hh) \n \xa0\xa0 -w\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0 disable all warnings \n \xa0\xa0 -v -vv\xa0\xa0\xa0\xa0\xa0 show version, show search paths or loaded files \n \xa0\xa0 -h -hh\xa0\xa0\xa0\xa0\xa0 show  this , show more help \n \xa0\xa0 -bench\xa0\xa0\xa0\xa0\xa0 show compilation statistics \n \xa0\xa0 -\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0 use stdin pipe as infile \n \xa0\xa0 @listfile\xa0\xa0 read arguments from listfile \n Preprocessor options: \n \xa0\xa0 -Idir\xa0\xa0\xa0\xa0\xa0\xa0 add include path  \'dir\' \n \xa0\xa0 -Dsym[=val] define  \'sym\'   with   value  \'val\' \n \xa0\xa0 -Usym\xa0\xa0\xa0\xa0\xa0\xa0 undefine  \'sym\' \n \xa0\xa0 -E\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0 preprocess only \n Linker options: \n \xa0\xa0 -Ldir\xa0\xa0\xa0\xa0\xa0\xa0 add library path  \'dir\' \n \xa0\xa0 -llib\xa0\xa0\xa0\xa0\xa0\xa0 link  with   dynamic or static library  \'lib\' \n \xa0\xa0 -r\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0 generate (relocatable) object file \n \xa0\xa0 -shared\xa0\xa0\xa0\xa0 generate a shared library/dll \n \xa0\xa0 -rdynamic\xa0\xa0 export all global symbols to dynamic linker \n \xa0\xa0 -soname\xa0\xa0\xa0\xa0 set name  for   shared library to be used at runtime \n \xa0\xa0 -Wl,-opt[=val]\xa0 set linker option (see tcc -hh) \n Debugger options: \n \xa0\xa0 -g\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0 generate runtime debug info \n \xa0\xa0 -b\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0 compile  with   built- in   memory and bounds checker (implies -g) \n \xa0\xa0 -bt N\xa0\xa0\xa0\xa0\xa0\xa0 show N callers  in   stack traces \n Misc. options: \n \xa0\xa0 -x[c|a|n]\xa0\xa0 specify type of the next infile \n \xa0\xa0 -nostdinc\xa0\xa0  do   not use standard system include paths \n \xa0\xa0 -nostdlib\xa0\xa0  do   not link  with   standard crt and libraries \n \xa0\xa0 -Bdir\xa0\xa0\xa0\xa0\xa0\xa0 set tcc\'s private include/library dir \n \xa0\xa0 -MD\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0 generate dependency file  for   make \n \xa0\xa0 -MF file\xa0\xa0\xa0 specify dependency file name \n \xa0\xa0 -m32/64\xa0\xa0\xa0\xa0 defer to i386/x86_64 cross compiler \n Tools: \n \xa0\xa0 create library\xa0 : tcc -ar [rcsv] lib.a files \n \xa0\xa0 create def file : tcc -impdef lib.dll [-v] [-o lib.def] \n \n \n \n \n \n \n \n 4. 再重新打開start.bat 並輸入tcc \n 表示已經啟動路徑\xa0 y:\\tcc 目錄. \n 3. 接下來必須修改 SciTE 編輯器中的 cpp.properties, 讓 Tools -> Go 可以呼叫 tcc.exe 中副檔名為 .c 的程式 \n 4.把 SciTE 的工能表 Options 往下點擊 Open cpp.properties 編輯設定檔案, 並且勾選 View -> Line Number 在編輯器中顯示行號, 針對\xa0 476 行的設定進行修改: \n \xa0 \xa0#紅色的地方(註解掉)\xa0 \xa0#黃色的地方(增加上去)\xa0 \n \xa0 \n 意即, 將原先 cc=g++ 與 ccc=gcc 改為利用 y:\\tcc\\tcc.exe -run 進行類解譯, 而且將原先必須經過編譯後以檔名執行的 command.go.*.c 設為直接利用 tcc.exe -run ex.c 的方式執行, 而 FileNameExt 就是帶有副檔名的程式名稱. \n 5. 完成設定後, 可以在編輯器中加入 hello.c (記得先存檔), 並且利用 Tools -> Go 直接執行. \n \n \n \n \n \n \n 1 \n 2 \n 3 \n 4 \n \n \n \n int   main() { \n printf ( "Hello, world!\\n" ); \n return   0; \n } \n \n \n \n \n \n \n \n 6. 練習2 \n 7.首先 下載\xa0 gnuplot.7z \xa0 與 \xa0 wqy-microhei.ttc \n 8. gunplot 目錄與 .ttc 中文字型檔案可以放在 y:\\, 並且在 start.bat 加入 y:\\gnuplot\\bin \n #紅色(增加上去) \n \n 9. 完成所有步驟後, 可以執行下面的程式 \n \n \n \n \n \n \n \n \n \n 1 \n 2 \n 3 \n 4 \n 5 \n 6 \n 7 \n 8 \n 9 \n 10 \n 11 \n 12 \n 13 \n 14 \n 15 \n 16 \n 17 \n 18 \n 19 \n 20 \n 21 \n 22 \n 23 \n 24 \n 25 \n 26 \n 27 \n 28 \n 29 \n 30 \n 31 \n 32 \n 33 \n 34 \n 35 \n 36 \n 37 \n 38 \n 39 \n 40 \n 41 \n 42 \n 43 \n 44 \n 45 \n 46 \n 47 \n 48 \n 49 \n 50 \n 51 \n 52 \n 53 \n 54 \n 55 \n 56 \n 57 \n 58 \n 59 \n 60 \n 61 \n 62 \n 63 \n 64 \n 65 \n 66 \n 67 \n 68 \n 69 \n 70 \n 71 \n 72 \n 73 \n 74 \n 75 \n 76 \n 77 \n 78 \n 79 \n 80 \n 81 \n 82 \n 83 \n 84 \n 85 \n 86 \n 87 \n 88 \n 89 \n 90 \n 91 \n 92 \n 93 \n 94 \n \n \n \n /* Runge Kutta for a set of first order differential equations */ \n \xa0 \xa0 \n #include <stdio.h> \n #include <math.h> \n \xa0 \xa0 \n #define N 2 /* number of first order equations */ \n #define dist 0.1 /* stepsize in t*/ \n #define MAX 30.0 /* max for t */ \n \xa0 \xa0 \n FILE   *output;  /* internal filename */ \n FILE   *output1;  /* internal filename */ \n // 利用 pipe 呼叫 gnuplot 繪圖 \n FILE   *pipe; \n \xa0 \xa0 \n void   runge4( double   x,  double   y[],  double   step);  /* Runge-Kutta function */ \n double   f( double   x,  double   y[],  int   i);  /* function for derivatives */ \n \xa0 \xa0 \n void   main(){ \n \xa0 \xa0 \n \xa0\xa0 double   t, y[N]; \n \xa0\xa0 int   j; \n \xa0 \xa0 \n \xa0\xa0 output= fopen ( "osc.dat" ,  "w" );  /* external filename */ \n \xa0\xa0 output1= fopen ( "osc1.dat" ,  "w" );  /* external filename */ \n \xa0 \xa0 \n \xa0\xa0 y[0]=1.0;  /* initial position */ \n \xa0\xa0 y[1]=0.0;  /* initial velocity */ \n \xa0 \xa0 \n \xa0\xa0 //fprintf(output, "0\\t%f\\n", y[0]); \n \xa0 \xa0 \n \xa0\xa0 for   (j=1; j*dist<=MAX ;j++)  /* time loop */ { \n \xa0 \xa0 \n \xa0\xa0\xa0\xa0 t=j*dist; \n \xa0\xa0\xa0\xa0 runge4(t, y, dist); \n \xa0\xa0\xa0\xa0 fprintf (output,  "%f\\t%f\\n" , t, y[0]); \n \xa0\xa0\xa0\xa0 fprintf (output1,  "%f\\t%f\\n" , t, y[1]); \n \xa0\xa0 } \n \xa0 \xa0 \n \xa0\xa0 fclose (output); \n \xa0\xa0 fclose (output1); \n \xa0 \xa0 \n \xa0\xa0 pipe = popen( "gnuplot -persist" , "w" ); \n \xa0\xa0 //fprintf(pipe,"set term png enhanced font \\"v:/fireflysung.ttf\\" 18 \\n"); \n \xa0\xa0 fprintf (pipe, "set term png enhanced font \\"y:/wqy-microhei.ttc\\" 18 \\n" ); \n \xa0\xa0 //fprintf(pipe,"set yrange [68:70]\\n"); \n \xa0\xa0 fprintf (pipe, "set output \\"test.png\\"\\n" ); \n \xa0\xa0 fprintf (pipe,  "plot \\"osc.dat\\" title \\"位移\\" with lines, \\"osc1.dat\\" title \\"速度\\" with lines\\n" ); \n \xa0\xa0 fprintf (pipe, "quit\\n" ); \n \xa0 \n \xa0\xa0 fprintf (pipe, "quit\\n" ); \n \xa0\xa0 pclose(pipe); \n } \n \xa0 \xa0 \n void   runge4( double   x,  double   y[],  double   step){ \n \xa0 \xa0 \n \xa0\xa0 double   h=step/2.0,  /* the midpoint */ \n \xa0\xa0 t1[N], t2[N], t3[N],  /* temporary storage arrays */ \n \xa0\xa0 k1[N], k2[N], k3[N],k4[N];  /* for Runge-Kutta */ \n \xa0\xa0 int   i; \n \xa0 \xa0 \n \xa0\xa0 for   (i=0;i<N;i++){ \n \xa0 \xa0 \n \xa0\xa0\xa0\xa0 t1[i]=y[i]+0.5*(k1[i]=step*f(x,y,i)); \n \xa0\xa0 } \n \xa0 \xa0 \n \xa0\xa0 for   (i=0;i<N;i++){ \n \xa0 \xa0 \n \xa0\xa0\xa0\xa0 t2[i]=y[i]+0.5*(k2[i]=step*f(x+h, t1, i)); \n \xa0\xa0 } \n \xa0 \xa0 \n \xa0\xa0 for   (i=0;i<N;i++){ \n \xa0 \xa0 \n \xa0\xa0\xa0\xa0 t3[i]=y[i]+ (k3[i]=step*f(x+h, t2, i)); \n \xa0\xa0 } \n \xa0 \xa0 \n \xa0\xa0 for   (i=0;i<N;i++){ \n \xa0 \xa0 \n \xa0\xa0\xa0\xa0 k4[i]= step*f(x+step, t3, i); \n \xa0\xa0 } \n \xa0 \xa0 \n \xa0\xa0 for   (i=0;i<N;i++){ \n \xa0 \xa0 \n \xa0\xa0\xa0\xa0 y[i]+=(k1[i]+2*k2[i]+2*k3[i]+k4[i])/6.0; \n \xa0\xa0 } \n } \n \xa0 \xa0 \n double   f( double   x,  double   y[],  int   i){ \n \xa0 \xa0 \n \xa0\xa0 if   (i==0) \n \xa0\xa0\xa0\xa0 x=y[1];  /* derivative of first equation */ \n \xa0\xa0 if   (i==1) \n \xa0\xa0\xa0\xa0 x=-y[0]-0.5*y[1]; \n \xa0\xa0 return   x; \n } \n \n \n \n \n \n \n \n', 'tags': '', 'url': '利用 SciTE 編輯器類解譯 ANSI C 程式.html'}, {'title': 'week8', 'text': '\n', 'tags': '', 'url': 'week8.html'}, {'title': 'week9', 'text': '', 'tags': '', 'url': 'week9.html'}, {'title': 'week10', 'text': '', 'tags': '', 'url': 'week10.html'}]};